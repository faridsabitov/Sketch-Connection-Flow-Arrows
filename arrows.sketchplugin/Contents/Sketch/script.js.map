{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/createArrow.js","webpack://exports/./src/draw.js","webpack://exports/./src/script.js","webpack://exports/./src/updateArrow.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/settings\"","webpack://exports/external \"sketch/ui\""],"names":["UI","require","Settings","pluginKey","document","docData","pluginData","currentParentGroup","newConnectionsData","sketch","fromNative","context","documentData","command","valueForKey_onLayer_forPluginIdentifier","currentPage","currentArtboard","getConnectionsData","createArrow","firstObjectID","secondObjectID","style","type","direction","conditionID","isCondition","localDirection","getDirection","updateSpacing","autoAlignLayer","arrow","drawConnection","connection","firstObject","secondObject","condition","line","objectID","push","setValue_forKey_onLayer_forPluginIdentifier","dataArray","i","length","getLayerWithID","firstObjectMidX","frame","x","width","firstObjectMidY","y","height","secondObjectMidX","secondObjectMidY","diffX","diffY","absDiffX","Math","abs","absDiffY","sourceObjectID","childObjectID","sourceObject","childObject","settingForKey","currentSpacing","sourceMidY","childMidY","sourceMidX","childMidX","diff","connectionPos","getConnectionPos","drawAngledLine","firstLayerPosX","firstLayerPosY","middlePosX","middlePosY","secondLayerPosX","secondLayerPosY","drawStraightLine","drawCurvedLine","updateCondition","addCondition","styleLine","addToArrowsGroup","firstObjectAbsPos","changeBasis","from","parent","to","secondObjectAbsPos","currentGroup","checkForGroup","path","NSBezierPath","bezierPath","moveToPoint","NSMakePoint","lineToPoint","MSShapeGroup","layerWithPath","MSPath","pathWithBezierPath","points","layers","cornerRadius","setName","curveMode","hasCurveFrom","hasCurveTo","curveFrom","curveTo","keyword","libraries","getLibraries","libraryObject","symbolReferences","symbol","g","getImportableSymbolReferencesForDocument","name","includes","alert","symbolMaster","import","createNewInstance","addToConditionGroup","conGroup","arGroup","arGroupX","arGroupY","fixGeometryWithOptions","Group","group","moveToBack","adjustToFit","id","localStyle","getLayerStyles","ownStyle","sharedStyle","border","addStylePartOfType","color","MSColor","colorWithRGBADictionary","r","b","a","thickness","endMarkerType","allStyles","allLayerStyles","styles","count","addLayers","locked","groupName","actionContext","createAutoArrow","create","createRightArrow","createDownArrow","createLeftArrow","createUpArrow","createRightArrowWithCondition","createDownArrowWithCondition","createLeftArrowWithCondition","createUpArrowWithCondition","autoUpdateSelectedArrows","updateSelectedArrows","selection","class","currentConnectionsData","connectionIndex","findConnectionIndex","updateArrow","message","updateArtboardArrows","update","updateAllArrows","deleteSelectedArrows","connections","deleteLine","deleteConnectionFromData","updateArrowsCounter","sketchObject","parentArtboard","deleteArtboardArrows","deleteAllArrows","getSourceObjectFromSelection","defineSourceObject","data","indexArray","String","connectionsData","level","isUpdate","firstObjectArtboard","secondObjectArtboard","lineID","conditionObject","result","remove","lineObject","selectedGroup","newConnections"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","import sketch from 'sketch';\n\nlet UI = require('sketch/ui') ;\nvar Settings = require('sketch/settings');\n\nconst pluginKey = \"flowArrows\";\nlet document;\n\nlet docData, pluginData, currentParentGroup, newConnectionsData;\n\ndocument = sketch.fromNative(context.document);\ndocData = context.document.documentData();\npluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\ncurrentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage(); // TODO: Might be a problem for multiple artboards\nnewConnectionsData = getConnectionsData();\n\nimport { drawConnection } from \"./draw.js\";\n\nexport function createArrow(firstObjectID, secondObjectID, style, type, direction, conditionID, isCondition) {  // Refactored\n  let localDirection = direction == \"Auto\" ? getDirection(firstObjectID, secondObjectID) : direction;\n\n  // Main Operations based on the settings\n  updateSpacing(firstObjectID, secondObjectID, localDirection);\n  autoAlignLayer(firstObjectID, secondObjectID, localDirection);\n\n  // Making an Arrow \n  let arrow = drawConnection(firstObjectID, secondObjectID, style, type, localDirection, conditionID, isCondition);\n  \n  // Storage for current connection\n  let connection = {\n    firstObject : firstObjectID,\n    secondObject : secondObjectID,\n    style : arrow.style,\n    condition : arrow.conditionID,\n    isCondition : isCondition,\n    type : arrow.type,\n    direction: localDirection,\n    line : arrow.line.objectID()\n  }\n\n  // Need to save this data to the global array\n  newConnectionsData.push(connection);\n  context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n}\n\nfunction getConnectionsData(){ //Refactored\n    let dataArray = [];\n    \n    if(pluginData){\n      for (let i = 0; i < pluginData.length; i ++) {\n        dataArray.push(pluginData[i]);\n      }\n    } \n    return dataArray;\n  }\n\nfunction getDirection(firstObjectID, secondObjectID){ // Refactored\n  // Get direction from the source object\n  const firstObject = document.getLayerWithID(firstObjectID);\n  const secondObject = document.getLayerWithID(secondObjectID);\n  const firstObjectMidX = firstObject.frame.x+firstObject.frame.width/2;\n  const firstObjectMidY = firstObject.frame.y+firstObject.frame.height/2;\n  const secondObjectMidX = secondObject.frame.x+secondObject.frame.width/2;\n  const secondObjectMidY = secondObject.frame.y+secondObject.frame.height/2;\n\n  const diffX = firstObjectMidX - secondObjectMidX;\n  const diffY = firstObjectMidY - secondObjectMidY;\n  const absDiffX = Math.abs(diffX);\n  const absDiffY = Math.abs(diffY);\n  let direction;\n\n  if(secondObjectMidX > firstObjectMidX){\n    // Right Half\n    if(secondObjectMidY > firstObjectMidY){\n      // Bottom quarter\n      direction = diffX > diffY ? \"Down\" : \"Right\";\n    } else {\n      // Top quarter\n      direction = absDiffX > absDiffY ? \"Right\" : \"Up\";\n    }\n  } else {\n    // Left Half\n    if(secondObjectMidY > firstObjectMidY){\n      // Bottom quarter\n      direction = absDiffX > absDiffY ? \"Left\" : \"Down\";\n    } else {\n      // Top quarter\n      direction = diffX > diffY ? \"Left\" : \"Up\";\n    }\n  }\n\n  return direction;\n}\n\nfunction updateSpacing(sourceObjectID, childObjectID, direction){\n  let sourceObject = document.getLayerWithID(sourceObjectID);\n  let childObject = document.getLayerWithID(childObjectID);\n\n  if(Settings.settingForKey(\"arrowSpacing\") && Settings.settingForKey(\"arrowSpacing\") != 0){\n    let currentSpacing = Settings.settingForKey(\"arrowSpacing\");\n    \n    if(direction == \"Right\"){\n      childObject.frame.x = sourceObject.frame.x + sourceObject.frame.width + currentSpacing;\n    }\n  \n    if(direction == \"Down\"){\n      childObject.frame.y = sourceObject.frame.y + sourceObject.frame.height + currentSpacing;\n    }\n  \n    if(direction == \"Left\"){\n      childObject.frame.x = sourceObject.frame.x - childObject.frame.width - currentSpacing;\n    }\n  \n    if(direction == \"Up\"){\n      childObject.frame.y = sourceObject.frame.y - childObject.frame.height - currentSpacing;\n    }\n  }\n}\n\nfunction autoAlignLayer(sourceObjectID, childObjectID, direction){\n  let sourceObject = document.getLayerWithID(sourceObjectID);\n  let childObject = document.getLayerWithID(childObjectID);\n  let sourceMidY, childMidY, sourceMidX, childMidX, diff;\n\n  if(Settings.settingForKey(\"autoAlign\")){\n    if(Settings.settingForKey(\"autoAlign\") == true){\n      // If user turned on Auto-Align settings\n      \n      if(direction == \"Right\" || direction == \"Left\"){\n        sourceMidY = sourceObject.frame.y + sourceObject.frame.height/2;\n        childMidY = childObject.frame.y + childObject.frame.height/2;\n        diff = sourceMidY - childMidY;\n        if(diff > -6 && diff < 6){childObject.frame.y = childObject.frame.y + diff;}\n      }\n    \n      if(direction == \"Down\" || direction == \"Up\"){\n        sourceMidX = sourceObject.frame.x + sourceObject.frame.width/2;\n        childMidX = childObject.frame.x + childObject.frame.width/2;\n        diff = sourceMidX - childMidX;\n        if(diff > -6 && diff < 6){childObject.frame.x = childObject.frame.x + diff;}\n      }\n    }\n  }\n}","import sketch from 'sketch';\nvar Settings = require('sketch/settings');\n\nconst pluginKey = \"flowArrows\";\nlet document = sketch.fromNative(context.document);\n\n\nlet docData = context.document.documentData();\n// let pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\nlet currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage();\n\n// Main Function\n\nexport function drawConnection(firstObjectID, secondObjectID, style, type, localDirection, conditionID, condition){ // Refactored\n  // Process of creating new connection  \n  let firstObject = document.getLayerWithID(firstObjectID);\n  let secondObject = document.getLayerWithID(secondObjectID);\n  let connectionPos = getConnectionPos(firstObject, secondObject, localDirection);\n  let connection = {\n    line: [], \n    conditionID: [],\n    type: [],\n    style: []\n  }\n\n  // Type  \n  connection.type = type == null ? Settings.settingForKey(\"arrowType\") : type;\n  if(connection.type == \"Angled\" || connection.type == null){ connection.line = drawAngledLine(connectionPos.firstLayerPosX, connectionPos.firstLayerPosY, connectionPos.middlePosX, connectionPos.middlePosY, connectionPos.secondLayerPosX, connectionPos.secondLayerPosY, localDirection);}\n  if(connection.type == \"Straight\"){ connection.line = drawStraightLine(connectionPos.firstLayerPosX, connectionPos.firstLayerPosY, connectionPos.secondLayerPosX, connectionPos.secondLayerPosY, localDirection);}\n  if(connection.type == \"Curved\"){ connection.line = drawCurvedLine(connectionPos.firstLayerPosX, connectionPos.firstLayerPosY, connectionPos.secondLayerPosX, connectionPos.secondLayerPosY, localDirection);}\n\n  // Condition\n  if(condition == true){\n    if(conditionID != null){\n      connection.conditionID = updateCondition(conditionID, connectionPos.middlePosX, connectionPos.middlePosY);\n    } else {\n      connection.conditionID = addCondition(\"#con\", connectionPos.middlePosX, connectionPos.middlePosY);\n    }\n  } else {\n    connection.conditionID = null;\n  }\n  // connection.conditionID = condition != false ? connection.conditionID = addCondition(\"#con\", connectionPos.middlePosX, connectionPos.middlePosY) : connection.conditionID = null\n\n  // Style\n  connection.style = styleLine(connection.line, style);\n\n  // Add to group\n  addToArrowsGroup(connection.line);\n  \n  return connection\n}\n\n// Positions\n\nfunction getConnectionPos(firstObject, secondObject, direction){ // Refactored\n\n    let firstObjectAbsPos = firstObject.frame.changeBasis({from: firstObject.parent, to: currentParentGroup});\n    let secondObjectAbsPos = secondObject.frame.changeBasis({from: secondObject.parent, to: currentParentGroup});\n    let currentGroup = checkForGroup(\"Arrows\");\n    let diffX, diffY;\n  \n    if(currentGroup){\n      diffX = currentGroup.frame().x();\n      diffY = currentGroup.frame().y();\n    } else {\n      diffX = 0;\n      diffY = 0;\n    }\n  \n    let connectionPos = {\n      firstLayerPosX: null,\n      firstLayerPosY: null, \n      secondLayerPosX: null, \n      secondLayerPosY: null, \n      middlePosX: null, \n      middlePosY: null\n    }\n  \n    // Getting all the positions\n    if(direction == \"Up\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x+firstObjectAbsPos.width/2-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x+secondObjectAbsPos.width/2-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y+secondObjectAbsPos.height-diffY;\n  \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    if(direction == \"Right\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x+firstObjectAbsPos.width-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y+firstObjectAbsPos.height/2-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y+secondObjectAbsPos.height/2-diffY;\n      \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    if(direction == \"Down\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x+firstObjectAbsPos.width/2-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y+firstObjectAbsPos.height-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x+secondObjectAbsPos.width/2-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y-diffY;\n  \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    if(direction == \"Left\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y+firstObjectAbsPos.height/2-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x+secondObjectAbsPos.width-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y+secondObjectAbsPos.height/2-diffY;\n  \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    return connectionPos\n}\n\n// Drawing Types\n\nfunction drawAngledLine(firstLayerPosX, firstLayerPosY, middlePosX, middlePosY, secondLayerPosX, secondLayerPosY, direction){ // Refactored\n    let path = NSBezierPath.bezierPath();\n  \n    if(direction == \"Up\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(firstLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    if(direction == \"Right\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, secondLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    if(direction == \"Down\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(firstLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    if(direction == \"Left\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, secondLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    let line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n    let points = line.layers().firstObject().points();\n    points[1].cornerRadius = 20;\n    points[2].cornerRadius = 20;\n    line.setName(\"Angled Arrow\");\n  \n    return line;\n}\n\nfunction drawStraightLine(firstLayerPosX, firstLayerPosY, secondLayerPosX, secondLayerPosY, direction){ // Refactored\n    let path = NSBezierPath.bezierPath();\n    \n    if(direction == \"Up\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    if(direction == \"Right\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    if(direction == \"Down\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    if(direction == \"Left\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    let line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n    line.setName(\"Straight Arrow\");\n  \n    return line;\n}\n\nfunction drawCurvedLine(firstLayerPosX, firstLayerPosY, secondLayerPosX, secondLayerPosY, direction){ // Refactored\n    let path = NSBezierPath.bezierPath();\n    let line;\n  \n    if(direction == \"Up\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosX<secondLayerPosX){\n        points[0].curveFrom = {x: 0, y: 0.5};\n        points[0].curveTo = {x: -0.5, y: 1};\n  \n        points[1].curveFrom = {x: 1, y: 1};\n        points[1].curveTo = {x: 1, y: 0.5};\n      } else {\n        points[0].curveFrom = {x: 1, y: 0.5};\n        points[0].curveTo = {x: -0.5, y:1};\n  \n        points[1].curveFrom = {x: 1, y: 1};\n        points[1].curveTo = {x: 0, y: 0.5};\n      }\n    }\n  \n    if(direction == \"Right\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosY<secondLayerPosY){\n        points[0].curveFrom = {x: 0.5, y: 0};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 1};\n      } else {\n        points[0].curveFrom = {x: 0.5, y: 1};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 0};\n      }\n    }\n  \n    if(direction == \"Down\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosX<secondLayerPosX){\n        points[0].curveFrom = {x: 0, y: 0.5};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 1,y: 0.5};\n      } else {\n        points[0].curveFrom = {x: 1, y: 0.5};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0,y: 0.5};\n      }\n    }\n  \n    if(direction == \"Left\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosY<secondLayerPosY){\n        points[0].curveFrom = {x: 0.5, y: 0};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 1};\n      } else {\n        points[0].curveFrom = {x: 0.5, y: 1};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 0};\n      }\n    }\n  \n    // Providing Settings for the arrow\n    line.setName(\"Curved Arrow\");\n  \n    return line;\n}\n\n// Conditions\n\nfunction addCondition(keyword, x, y){ // Refactored\n    let libraries = sketch.getLibraries();\n    let libraryObject, symbolReferences, symbol;\n  \n    for(let g = 0; g < libraries.length; g++) {\n      symbolReferences = libraries[g].getImportableSymbolReferencesForDocument(document);\n      for(let i = 0; i < symbolReferences.length; i++) {\n        if(symbolReferences[i].name.includes(keyword)){\n          libraryObject = symbolReferences[i];\n        }\n      }\n    }\n  \n    if(libraryObject == null){\n      symbol = null;\n      UI.alert('Condition symbol is not found', 'If you would like to add arrows with specific conditions, you need to specify them in your libraries. You can download the library that works well with the plugin by going into Plugins -> Connection Arrows -> Get Free Library. Conditions are taken from the library based on their names. Make sure to name symbol as \"#condition\" so it will be added here');\n    } else {\n      let symbolMaster = libraryObject.import();\n      symbol = symbolMaster.createNewInstance();\n      symbol = addToConditionGroup(symbol, x, y);\n    }\n  \n    return symbol;\n}\n\nfunction addToConditionGroup(condition, x, y){ // Refactored\n    let conGroup = checkForGroup(\"Conditions\");\n    let arGroup = checkForGroup(\"Arrows\");\n    let arGroupX = arGroup != null ? arGroup.frame().x() : 0;\n    let arGroupY = arGroup != null ? arGroup.frame().y() : 0;\n  \n    if(conGroup){\n      condition.frame.x = x - condition.frame.width / 2 - (conGroup.frame().x() - arGroupX);\n      condition.frame.y = y - condition.frame.height / 2 - (conGroup.frame().y() - arGroupY);\n      condition.parent = conGroup;\n      conGroup.fixGeometryWithOptions(1);\n    } else {\n      condition.frame.x = x - condition.frame.width / 2;\n      condition.frame.y = y - condition.frame.height / 2;\n      let Group = require('sketch/dom').Group;\n      let group = new Group({\n        parent: currentParentGroup,\n        name: 'Conditions',\n        layers: [condition]\n      });\n      group.moveToBack();\n      group.adjustToFit();\n    }\n    return condition.id;\n}\n\nfunction updateCondition(conditionID, x, y){ // Refactored\nlet condition = document.getLayerWithID(conditionID);\n// log (condition)\nlet conGroup = checkForGroup(\"Conditions\") ;\nlet arGroup = checkForGroup(\"Arrows\");\nlet arGroupX = arGroup != null ? arGroup.frame().x() : 0;\nlet arGroupY = arGroup != null ? arGroup.frame().y() : 0;\n\nif(conGroup){\n    condition.frame.x = x - condition.frame.width / 2 - (conGroup.frame().x() - arGroupX);\n    condition.frame.y = y - condition.frame.height / 2 - (conGroup.frame().y() - arGroupY);\n    conGroup.fixGeometryWithOptions(1);\n} else {\n    condition.frame.x = x - condition.frame.width / 2;\n    condition.frame.y = y - condition.frame.height / 2;\n}\nreturn condition.id;\n}\n\n// Style\n\nfunction styleLine(line, style){ // Refactored\n    let localStyle;\n    \n    if(style != null){ \n      // For updates\n      if(getLayerStyles(style) != null && style != \"Default Style\"){\n        // If style is specified\n        localStyle = style;\n        let ownStyle = getLayerStyles(style);\n        line.sharedStyle = ownStyle[0];\n      } else {\n        // if there is no specific style\n        localStyle = \"Default Style\";\n        let border = line.style().addStylePartOfType(1);\n        border.color = MSColor.colorWithRGBADictionary({r: 0.89, g: 0.89, b: 0.89, a: 1});\n        border.thickness = 2;\n        line.style().endMarkerType = 2;\n      }\n    } else {\n      // For creating new\n      if(context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowStyle\", docData, pluginKey) != null && context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowStyle\", docData, pluginKey) != \"Default Style\"){\n        // we have settins almost all the time and it's not default\n        localStyle = getLayerStyles(context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowStyle\", docData, pluginKey));\n        line.sharedStyle = localStyle[0];\n        localStyle = localStyle[0].name();\n      } else {\n        localStyle = \"Default Style\";\n        let border = line.style().addStylePartOfType(1);\n        border.color = MSColor.colorWithRGBADictionary({r: 0.89, g: 0.89, b: 0.89, a: 1});\n        border.thickness = 2;\n        line.style().endMarkerType = 2;\n      } \n    }\n  \n    return localStyle;\n}\n\nfunction getLayerStyles(name) { // Refactored\n    let allStyles = docData.allLayerStyles();\n    let keyword = \"$arrow\";\n    let styles = [];\n  \n    for(let i = 0; i < allStyles.count(); i++){\n      if(name == null) {\n        if(allStyles[i].name().includes(keyword)){styles.push(allStyles[i]);}\n      } else {\n        if(allStyles[i].name() == name){styles.push(allStyles[i]);}\n      }\n    }\n      return styles;\n}\n  \n// Groups\n\nfunction addToArrowsGroup(line){\n    let currentGroup = checkForGroup(\"Arrows\");\n    if(currentGroup){\n      currentGroup.addLayers([line]);\n      currentGroup.fixGeometryWithOptions(1);\n    } else {\n      let Group = require('sketch/dom').Group;\n      let group = new Group({\n        parent: currentParentGroup,\n        name: 'Arrows',\n        locked: true,\n        layers: [line]\n      });\n      group.moveToBack();\n      group.adjustToFit();\n    }\n}\n\nfunction checkForGroup(groupName) { // refactored\n    let currentGroup = null;\n  \n    // Checking all the groups that we have\n    for(let i = 0; i < currentParentGroup.layers().count(); i++){\n      if(currentParentGroup.layers()[i].name() == groupName) {\n        currentGroup = currentParentGroup.layers()[i];\n      } \n    }\n  \n    return currentGroup;\n}","//\n//  Variables\n//\n\nimport sketch from 'sketch';\n\n\nlet UI = require('sketch/ui') ;\nvar Settings = require('sketch/settings');\n\nconst pluginKey = \"flowArrows\";\nlet document;\n\nlet docData, pluginData, currentParentGroup, newConnectionsData;\nif(context.document){\n  //cc:remember place\n  document = sketch.fromNative(context.document);\n  docData = context.document.documentData();\n  pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\n  currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage(); // TODO: Might be a problem for multiple artboards\n  newConnectionsData = getConnectionsData();\n} else {\n  document = sketch.fromNative(context.actionContext.document);\n  //cc:here is bug;well, seems like a bug in logic\n}\n  \n//\n//  Create Connection Function\n//\n\n\nexport function createAutoArrow(context){create(context, \"Auto\", false);}\nexport function createRightArrow(context){create(context, \"Right\", false);}\nexport function createDownArrow(context){create(context, \"Down\", false);}\nexport function createLeftArrow(context){create(context, \"Left\", false);}\nexport function createUpArrow(context){create(context, \"Up\", false);}\n\nexport function createRightArrowWithCondition(context){create(context, \"Right\", true);}\nexport function createDownArrowWithCondition(context){create(context, \"Down\", true);}\nexport function createLeftArrowWithCondition(context){create(context, \"Left\", true);}\nexport function createUpArrowWithCondition(context){create(context, \"Up\", true);}\n\nexport function autoUpdateSelectedArrows(context) {  \n  // const action = context.actionContext;\n\n  // docData = action.document.documentData();\n  // pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\n  // currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage(); // TODO: Might be a problem for multiple artboards\n  // newConnectionsData = getConnectionsData();\n\n  // const movedLayers = Array.from(context.actionContext.layers).map(layer => sketch.fromNative(layer));\n  // log(movedLayers[0].id);\n  // log(movedLayers.length);\n\n  // // if (movedLayers.filter(layer => (layer.type == 'Artboard' || (layer.type == 'SymbolMaster' && config.arrangeSymbols))).length > 0) {\n  // //   ArrangeArtboards(context)\n  // // }\n\n  // let currentConnectionsData = newConnectionsData; // Need to refactor\n\n  // for(let g = 0; g < movedLayers.length; g++) {\n\n  //   let connectionIndex = findConnectionIndex(movedLayers[0].id, null, currentConnectionsData);\n\n  //   log(\"yes \"+connectionIndex);\n  //   if(connectionIndex.length == 0){\n      \n  //     updateArrow(currentConnectionsData[connectionIndex[0]].firstObject, currentConnectionsData[connectionIndex[0]].secondObject, currentConnectionsData[connectionIndex[0]].style, currentConnectionsData[connectionIndex[0]].type, currentConnectionsData[connectionIndex[0]].direction, currentConnectionsData[connectionIndex[0]].line, currentConnectionsData[connectionIndex[0]].condition, currentConnectionsData[connectionIndex[0]].isCondition, connectionIndex[0]);\n  //     sketch.UI.message(\"Current connection is updated 🤘\");\n  //   } else {\n  //     sketch.UI.message(\"There is no connection between selected layers on the plugin data\");\n  //   }\n    \n  // }\n  // context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n}\n\n  \n//\n//  Update Connection Function\n//\n\nexport function updateSelectedArrows(context) {\n  let selection = context.selection;\n\n  if(selection.count() > 1 && selection[0].class() != \"MSArtboardGroup\"){\n    // Need to find source object by ID first\n    let currentConnectionsData = newConnectionsData; // Need to refactor\n\n    for(let g = 0; g < selection.count(); g++) {\n      if(selection[g].objectID() != selection[0].objectID()){\n        // Then need to create or update connection arrow with each selection\n        let connectionIndex = findConnectionIndex(selection[0].objectID(), selection[g].objectID(), currentConnectionsData);\n\n        if(connectionIndex.length == 0){\n          updateArrow(currentConnectionsData[connectionIndex].firstObject, currentConnectionsData[connectionIndex].secondObject, currentConnectionsData[connectionIndex].style, currentConnectionsData[connectionIndex].type, currentConnectionsData[connectionIndex].direction, currentConnectionsData[connectionIndex].line, currentConnectionsData[connectionIndex].condition, currentConnectionsData[connectionIndex].isCondition, connectionIndex);\n          sketch.UI.message(\"Current connection is updated 🤘\");\n        } else {\n          sketch.UI.message(\"There is no connection between selected layers on the plugin data\");\n        }\n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n    \n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers. Artboards are coming soon 🥳\");\n  }\n}\n\nexport function updateArtboardArrows(context) {update(context, 2, false);}\n\nexport function updateAllArrows(context) {update(context, 3, true);}\n\nexport function deleteSelectedArrows(context) {\n  let selection = context.selection;\n  let firstObject, secondObject;\n\n  if(selection.count() == 2){\n\n    for(let g = 0; g < selection.count(); g++) {\n\n      if(selection[g].objectID() != selection[0].objectID()){ // It will never check 3rd connection\n        \n        let connections = getConnectionsData() ;\n        let connectionIndex = findConnectionIndex(selection[0].objectID(), selection[g].objectID(), connections);\n        \n        if(connectionIndex != null){\n          // We have connections in database\n          deleteLine(connections[connectionIndex].line);\n          newConnectionsData = deleteConnectionFromData(connectionIndex);\n          const updateArrowsCounter = connections.length;\n          for (let i = 0; i < updateArrowsCounter; i ++) {\n            // Need to go through each connection and check if it placed on selected artboard\n            firstObject = document.getLayerWithID(connections[i].firstObject);\n            secondObject = document.getLayerWithID(connections[i].secondObject);\n            if(firstObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n              if(secondObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n                deleteLine(connections[i].line);\n                newConnectionsData = deleteConnectionFromData(i);\n              }\n            }\n          }\n          context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n          sketch.UI.message(\"All arrows from selected layers are deleted ✌️\");\n        }\n      }\n    }\n  } else {\n    sketch.UI.message(\"Select two layers, please 🧐\");\n  }\n}\n\nexport function deleteArtboardArrows(context) {\n  let selection = context.selection;\n  let firstObject, secondObject;\n\n  // Need to delete all the arrows only from selected artboard\n  if(selection.count() == 1 && selection[0].class() == \"MSArtboardGroup\"){\n    let connections = getConnectionsData();\n    \n    if(connections.length > 0){\n      // We have connections in database\n      const updateArrowsCounter = connections.length;\n      for (let i = 0; i < updateArrowsCounter; i ++) {\n        // Need to go through each connection and check if it placed on selected artboard\n        firstObject = document.getLayerWithID(connections[i].firstObject);\n        secondObject = document.getLayerWithID(connections[i].secondObject);\n        if (firstObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n          if (secondObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n            deleteLine(connections[i].line);\n            newConnectionsData = deleteConnectionFromData(i);\n          }\n        }\n      }\n      context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n      sketch.UI.message(\"All arrows from selected artboard are deleted\");\n    } else {\n      // We don't have any connections to update\n      sketch.UI.message(\"There is nothing to delete\");\n    }\n  } else {\n    sketch.UI.message(\"Please select one artboard\");\n  }\n}\n\nexport function deleteAllArrows(context) {update(context, 3, false);}\n\n\n\n\n\n  // let selection = context.selection;\n  // if(selection.count() > 1 && selection[0].class() != \"MSArtboardGroup\"){\n  //   // Need to find source object by ID first\n  //   let currentConnectionsData = newConnectionsData; // Need to refactor\n\n  //   for(let g = 0; g < selection.count(); g++) {\n  //     if(selection[g].objectID() != selection[0].objectID()){\n  //       // Then need to create or update connection arrow with each selection\n  //       let connectionIndex = findConnectionIndex(selection[0].objectID(), selection[g].objectID(), currentConnectionsData);\n\n  //       if(connectionIndex.length == 0){\n  //         updateArrow(currentConnectionsData[connectionIndex].firstObject, currentConnectionsData[connectionIndex].secondObject, currentConnectionsData[connectionIndex].style, currentConnectionsData[connectionIndex].type, currentConnectionsData[connectionIndex].direction, currentConnectionsData[connectionIndex].line, currentConnectionsData[connectionIndex].condition, currentConnectionsData[connectionIndex].isCondition, connectionIndex);\n  //         sketch.UI.message(\"Current connection is updated 🤘\");\n  //       } else {\n  //         sketch.UI.message(\"There is no connection between selected layers on the plugin data\");\n  //       }\n  //     }\n  //   }\n  //   context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n    \n  // } else {\n  //   // When user didn't select anything\n  //   sketch.UI.message(\"Please select more than two layers. Artboards are coming soon 🥳\");\n  // }\n\n\n//\n//  Data\n//\n\nfunction getConnectionsData(){ //Refactored\n  let dataArray = [];\n  \n  if(pluginData){\n    for (let i = 0; i < pluginData.length; i ++) {\n      dataArray.push(pluginData[i]);\n    }\n  } \n  return dataArray;\n}\n\n\n//\n// Functions\n//\n\nimport { createArrow } from \"./createArrow.js\";\nimport { updateArrow } from \"./updateArrow.js\";\nimport { update } from \"./updateArrow.js\";\n\n\nfunction create(context, direction, isCondition){\n  //cc:create#1;Passing all the data\n  let selection = context.selection;\n\n  if(selection.count() > 1 && selection[0].class() != \"MSArtboardGroup\"){\n    // Need to find source object by ID first\n    let sourceObjectID = getSourceObjectFromSelection(selection, direction);\n    let currentConnectionsData = newConnectionsData; // Need to refactor\n\n    for(let g = 0; g < selection.count(); g++) {\n      if(selection[g].objectID() != sourceObjectID){\n        // Then need to create or update connection arrow with each selection\n        let connectionIndex = findConnectionIndex(sourceObjectID, selection[g].objectID(), currentConnectionsData);\n        \n        if(connectionIndex.length == 0){\n          // There is no connection with this two objects in our database\n          createArrow(sourceObjectID, selection[g].objectID(), null, null, direction, null, isCondition);\n          sketch.UI.message(\"New connection is created 🚀\");\n        } else {\n          // Need to remake the arrow condition\n          if(updateArrow(sourceObjectID, selection[g].objectID(), null, null, direction, currentConnectionsData[connectionIndex].line, currentConnectionsData[connectionIndex].condition, isCondition, connectionIndex)){\n            createArrow(sourceObjectID, selection[g].objectID(), null, null, direction, currentConnectionsData[connectionIndex].condition, isCondition);\n          }\n          sketch.UI.message(\"Current connection is updated 🤘\");\n        }\n      }\n    }\n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers. Artboards are coming soon 🥳\");\n  }\n}\n\nfunction getSourceObjectFromSelection(selection, direction){ //Refactored\n  let sourceObjectID = selection.firstObject().objectID();\n  \n  if(direction != \"Auto\"){\n    for(let g = 0; g < selection.count(); g++) {\n      sourceObjectID = defineSourceObject(sourceObjectID, selection[g].objectID(), direction);\n    }\n  }\n \n  return sourceObjectID;\n}\n\nfunction defineSourceObject(firstObjectID, secondObjectID, direction){ //Refactored\n  let firstObject = document.getLayerWithID(firstObjectID);\n  let secondObject = document.getLayerWithID(secondObjectID);\n  let sourceObjectID;\n\n  if(direction == \"Right\"){\n    if(firstObject.frame.x <= secondObject.frame.x){\n      sourceObjectID = firstObject.id;\n    } else {\n      sourceObjectID = secondObject.id;\n    }\n  }\n\n  if(direction == \"Down\"){\n    if(firstObject.frame.y <= secondObject.frame.y){\n      sourceObjectID = firstObject.id;\n    } else {\n      sourceObjectID = secondObject.id;\n    }\n  }\n\n  if(direction == \"Left\"){\n    if(firstObject.frame.x <= secondObject.frame.x){\n      sourceObjectID = secondObject.id;\n    } else {\n      sourceObjectID = firstObject.id;\n    }\n  }\n\n  if(direction == \"Up\"){\n    if(firstObject.frame.y <= secondObject.frame.y){\n      sourceObjectID = secondObject.id;\n    } else {\n      sourceObjectID = firstObject.id;\n    }\n  }\n\n  return sourceObjectID;\n}\n\nfunction findConnectionIndex(firstObjectID, secondObjectID, data){\n  let indexArray = []  ;\n  firstObjectID = String(firstObjectID);\n  secondObjectID = String(secondObjectID);\n  \n  if(pluginData){\n    // If we have database, need to check for connections\n    for(let y = 0; y < data.length; y++){\n      if(firstObjectID == data[y].firstObject || firstObjectID == data[y].secondObject){\n        if(secondObjectID == null){\n          // When we need to find connection between two objects\n          if(secondObjectID == data[y].firstObject || secondObjectID == data[y].secondObject){\n            indexArray[0] = y;\n          } \n        } else {\n          // When we need to find a connection for one object only\n          indexArray.push(y);\n        }\n      }\n    }\n  }\n  return indexArray;\n}\n\n\n// const track = require(\"sketch-module-google-analytics\")\n// track(\"UA-138226597-1\", \"event\", {\n//   ec: \"command\", \n//   ea: \"create\", \n//   ev: \"my-command\"\n// });\n\n\n\n\n\n","import sketch from 'sketch';\n\nlet UI = require('sketch/ui') ;\nvar Settings = require('sketch/settings');\n\nconst pluginKey = \"flowArrows\";\nlet document;\n\nlet docData, pluginData, currentParentGroup, connectionsData;\n\ndocument = sketch.fromNative(context.document);\ndocData = context.document.documentData();\npluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\ncurrentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage(); // TODO: Might be a problem for multiple artboards\nconnectionsData = getConnectionsData();\n\n\n\nexport function update(context, level, isUpdate) {\n    // 1 - selection level\n    // 2 - artboard level\n    // 3 - document level\n    let newConnectionsData = [];\n    let selection = context.selection;\n    let firstObjectArtboard;\n    let secondObjectArtboard;\n\n\n\n    if (connectionsData.length > 0) {\n        for (let i = 0; i < connectionsData.length; i++) {\n            deleteLine(connectionsData[i].line);\n            \n            if (level == 3) {\n                if(isUpdate){\n                    updateArrow(connectionsData[i].firstObject, connectionsData[i].secondObject, connectionsData[i].style, connectionsData[i].type, connectionsData[i].direction, connectionsData[i].line, connectionsData[i].condition, i);\n                    sketch.UI.message(\"All arrows are updated\");\n                } else {\n                    newConnectionsData = null\n                    sketch.UI.message(\"All arrows are deleted\");\n                }\n        \n            }\n            if (level == 2) {\n                firstObjectArtboard = document.getLayerWithID(connectionsData[i].firstObject);\n                firstObjectArtboard = firstObjectArtboard.sketchObject.parentArtboard().objectID();\n                secondObjectArtboard = document.getLayerWithID(connectionsData[i].secondObject);\n                secondObjectArtboard = secondObjectArtboard.sketchObject.parentArtboard().objectID();\n\n                if (selection.count() == 1 && selection[0].class() == \"MSArtboardGroup\") {\n\n                    if (firstObjectArtboard == selection[0].objectID()) {\n                        if (secondObjectArtboard == selection[0].objectID()) {\n                            updateArrow(connectionsData[i].firstObject, connectionsData[i].secondObject, connectionsData[i].style, connectionsData[i].type, connectionsData[i].direction, connectionsData[i].line, connectionsData[i].condition, i);\n                        } else {\n                            newConnectionsData.push(connectionsData[i]);\n                        }\n                    } else {\n                        newConnectionsData.push(connectionsData[i]);\n                    }\n                }\n            }\n            sketch.UI.message(\"All arrows are updated 🚀\");\n            \n           \n        }\n        context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n    } else {\n        sketch.UI.message(\"There is no arrows\");\n    }\n\n\n\n}\n\nexport function updateArrow(firstObjectID, secondObjectID, style, type, direction, lineID, conditionID, isCondition, connectionIndex) { // Refactored\n  // Need to check if we have the layers with such IDs\n  let firstObject = document.getLayerWithID(firstObjectID);\n  let secondObject = document.getLayerWithID(secondObjectID);\n  let conditionObject = document.getLayerWithID(conditionID);\n  let result = false;\n  \n  // Need to delete data first, because we will have a new line\n  deleteLine(lineID);\n  if(conditionID && !isCondition){\n    if(conditionObject){conditionObject.remove();}\n  }\n  \n  connectionsData = deleteConnectionFromData(connectionIndex);\n\n  if(firstObject && secondObject){\n    // If we have all the objects, we can recreate the line\n    result = true;\n  }\n\n  return result;\n}\n\nfunction deleteLine(lineID){ // refactored\n    let lineObject = document.getLayerWithID(lineID);\n    let selectedGroup;\n    if(lineObject){\n      selectedGroup = lineObject.parent;\n      lineObject.remove();\n      if(selectedGroup.layers.length == 0){\n        selectedGroup.remove();\n      }\n    }\n}\n\nfunction deleteConnectionFromData(connectionIndex){ // Refactored\n    let newConnections = [];\n    if(pluginData){\n      // If we have database\n      let connections = pluginData;\n  \n      for (let i = 0; i < connections.length; i ++) {\n        // Updating all connections without deleted one\n        if(i != connectionIndex){\n          newConnections.push(connections[i]);\n        }\n      }\n    }\n    return newConnections;\n}\n\nfunction getConnectionsData(){ //Refactored\n    let dataArray = [];\n    \n    if(pluginData){\n      for (let i = 0; i < pluginData.length; i ++) {\n        dataArray.push(pluginData[i]);\n      }\n    } \n    return dataArray;\n}","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/settings\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}