{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/draw.js","webpack://exports/./src/script.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/settings\"","webpack://exports/external \"sketch/ui\""],"names":["Settings","require","pluginKey","document","sketch","fromNative","context","docData","documentData","currentParentGroup","currentPage","currentArtboard","drawConnection","firstObjectID","secondObjectID","style","type","localDirection","conditionID","condition","firstObject","getLayerWithID","secondObject","connectionPos","getConnectionPos","connection","line","settingForKey","drawAngledLine","firstLayerPosX","firstLayerPosY","middlePosX","middlePosY","secondLayerPosX","secondLayerPosY","drawStraightLine","drawCurvedLine","updateCondition","addCondition","styleLine","addToArrowsGroup","direction","firstObjectAbsPos","frame","changeBasis","from","parent","to","secondObjectAbsPos","currentGroup","checkForGroup","diffX","diffY","x","y","width","height","path","NSBezierPath","bezierPath","moveToPoint","NSMakePoint","lineToPoint","MSShapeGroup","layerWithPath","MSPath","pathWithBezierPath","points","layers","cornerRadius","setName","curveMode","hasCurveFrom","hasCurveTo","curveFrom","curveTo","keyword","libraries","getLibraries","libraryObject","symbolReferences","symbol","g","length","getImportableSymbolReferencesForDocument","i","name","includes","UI","alert","symbolMaster","import","createNewInstance","addToConditionGroup","conGroup","arGroup","arGroupX","arGroupY","fixGeometryWithOptions","Group","group","moveToBack","adjustToFit","id","localStyle","getLayerStyles","ownStyle","sharedStyle","border","addStylePartOfType","color","MSColor","colorWithRGBADictionary","r","b","a","thickness","endMarkerType","command","valueForKey_onLayer_forPluginIdentifier","allStyles","allLayerStyles","styles","count","push","addLayers","locked","groupName","pluginData","newConnectionsData","getConnectionsData","actionContext","createAutoArrow","start","createRightArrow","createDownArrow","createLeftArrow","createUpArrow","createRightArrowWithCondition","createDownArrowWithCondition","createLeftArrowWithCondition","createUpArrowWithCondition","updateSelectedArrows","selection","class","currentConnectionsData","objectID","connectionIndex","findConnectionIndex","updateArrow","isCondition","message","setValue_forKey_onLayer_forPluginIdentifier","autoUpdateSelectedArrows","action","movedLayers","Array","map","layer","log","updateArtboardArrows","connections","firstObjectArtboard","secondObjectArtboard","updateArrowsCounter","sketchObject","parentArtboard","updateAllArrows","deleteAllArrows","deleteLine","deleteArtboardArrows","deleteConnectionFromData","deleteSelectedArrows","lineID","conditionObject","remove","createArrow","getDirection","updateSpacing","autoAlignLayer","arrow","firstObjectMidX","firstObjectMidY","secondObjectMidX","secondObjectMidY","absDiffX","Math","abs","absDiffY","dataArray","data","indexArray","String","newConnections","lineObject","selectedGroup","sourceObjectID","childObjectID","sourceObject","childObject","currentSpacing","sourceMidY","childMidY","sourceMidX","childMidX","diff","defineSourceObject","getSourceObjectFromSelection"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","import sketch from 'sketch';\nvar Settings = require('sketch/settings');\n\nconst pluginKey = \"flowArrows\";\nlet document = sketch.fromNative(context.document);\n\n\nlet docData = context.document.documentData();\n// let pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\nlet currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage();\n\n// Main Function\n\nexport function drawConnection(firstObjectID, secondObjectID, style, type, localDirection, conditionID, condition){ // Refactored\n  // Process of creating new connection  \n  let firstObject = document.getLayerWithID(firstObjectID);\n  let secondObject = document.getLayerWithID(secondObjectID);\n  let connectionPos = getConnectionPos(firstObject, secondObject, localDirection);\n  let connection = {\n    line: [], \n    conditionID: [],\n    type: [],\n    style: []\n  }\n\n  // Type  \n  connection.type = type == null ? Settings.settingForKey(\"arrowType\") : type;\n  if(connection.type == \"Angled\" || connection.type == null){ connection.line = drawAngledLine(connectionPos.firstLayerPosX, connectionPos.firstLayerPosY, connectionPos.middlePosX, connectionPos.middlePosY, connectionPos.secondLayerPosX, connectionPos.secondLayerPosY, localDirection);}\n  if(connection.type == \"Straight\"){ connection.line = drawStraightLine(connectionPos.firstLayerPosX, connectionPos.firstLayerPosY, connectionPos.secondLayerPosX, connectionPos.secondLayerPosY, localDirection);}\n  if(connection.type == \"Curved\"){ connection.line = drawCurvedLine(connectionPos.firstLayerPosX, connectionPos.firstLayerPosY, connectionPos.secondLayerPosX, connectionPos.secondLayerPosY, localDirection);}\n\n  // Condition\n  if(condition == true){\n    if(conditionID != null){\n      connection.conditionID = updateCondition(conditionID, connectionPos.middlePosX, connectionPos.middlePosY);\n    } else {\n      connection.conditionID = addCondition(\"#con\", connectionPos.middlePosX, connectionPos.middlePosY);\n    }\n  } else {\n    connection.conditionID = null;\n  }\n  // connection.conditionID = condition != false ? connection.conditionID = addCondition(\"#con\", connectionPos.middlePosX, connectionPos.middlePosY) : connection.conditionID = null\n\n  // Style\n  connection.style = styleLine(connection.line, style);\n\n  // Add to group\n  addToArrowsGroup(connection.line);\n  \n  return connection\n}\n\n// Positions\n\nfunction getConnectionPos(firstObject, secondObject, direction){ // Refactored\n\n    let firstObjectAbsPos = firstObject.frame.changeBasis({from: firstObject.parent, to: currentParentGroup});\n    let secondObjectAbsPos = secondObject.frame.changeBasis({from: secondObject.parent, to: currentParentGroup});\n    let currentGroup = checkForGroup(\"Arrows\");\n    let diffX, diffY;\n  \n    if(currentGroup){\n      diffX = currentGroup.frame().x();\n      diffY = currentGroup.frame().y();\n    } else {\n      diffX = 0;\n      diffY = 0;\n    }\n  \n    let connectionPos = {\n      firstLayerPosX: null,\n      firstLayerPosY: null, \n      secondLayerPosX: null, \n      secondLayerPosY: null, \n      middlePosX: null, \n      middlePosY: null\n    }\n  \n    // Getting all the positions\n    if(direction == \"Up\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x+firstObjectAbsPos.width/2-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x+secondObjectAbsPos.width/2-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y+secondObjectAbsPos.height-diffY;\n  \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    if(direction == \"Right\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x+firstObjectAbsPos.width-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y+firstObjectAbsPos.height/2-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y+secondObjectAbsPos.height/2-diffY;\n      \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    if(direction == \"Down\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x+firstObjectAbsPos.width/2-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y+firstObjectAbsPos.height-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x+secondObjectAbsPos.width/2-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y-diffY;\n  \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    if(direction == \"Left\"){\n      // First Layer Position Start Point Position\n      connectionPos.firstLayerPosX = firstObjectAbsPos.x-diffX;\n      connectionPos.firstLayerPosY = firstObjectAbsPos.y+firstObjectAbsPos.height/2-diffY;\n  \n      // Second Layer Position End Point Position\n      connectionPos.secondLayerPosX = secondObjectAbsPos.x+secondObjectAbsPos.width-diffX;\n      connectionPos.secondLayerPosY = secondObjectAbsPos.y+secondObjectAbsPos.height/2-diffY;\n  \n      // Middle Points\n      connectionPos.middlePosX = (connectionPos.firstLayerPosX + connectionPos.secondLayerPosX)/2;\n      connectionPos.middlePosY = (connectionPos.firstLayerPosY + connectionPos.secondLayerPosY)/2;\n    }\n  \n    return connectionPos\n}\n\n// Drawing Types\n\nfunction drawAngledLine(firstLayerPosX, firstLayerPosY, middlePosX, middlePosY, secondLayerPosX, secondLayerPosY, direction){ // Refactored\n    let path = NSBezierPath.bezierPath();\n  \n    if(direction == \"Up\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(firstLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    if(direction == \"Right\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, secondLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    if(direction == \"Down\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(firstLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, middlePosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    if(direction == \"Left\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, firstLayerPosY));\n      path.lineToPoint(NSMakePoint(middlePosX, secondLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX, secondLayerPosY));\n    }\n  \n    let line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n    let points = line.layers().firstObject().points();\n    points[1].cornerRadius = 20;\n    points[2].cornerRadius = 20;\n    line.setName(\"Angled Arrow\");\n  \n    return line;\n}\n\nfunction drawStraightLine(firstLayerPosX, firstLayerPosY, secondLayerPosX, secondLayerPosY, direction){ // Refactored\n    let path = NSBezierPath.bezierPath();\n    \n    if(direction == \"Up\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    if(direction == \"Right\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    if(direction == \"Down\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    if(direction == \"Left\"){\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n    }\n  \n    let line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n    line.setName(\"Straight Arrow\");\n  \n    return line;\n}\n\nfunction drawCurvedLine(firstLayerPosX, firstLayerPosY, secondLayerPosX, secondLayerPosY, direction){ // Refactored\n    let path = NSBezierPath.bezierPath();\n    let line;\n  \n    if(direction == \"Up\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosX<secondLayerPosX){\n        points[0].curveFrom = {x: 0, y: 0.5};\n        points[0].curveTo = {x: -0.5, y: 1};\n  \n        points[1].curveFrom = {x: 1, y: 1};\n        points[1].curveTo = {x: 1, y: 0.5};\n      } else {\n        points[0].curveFrom = {x: 1, y: 0.5};\n        points[0].curveTo = {x: -0.5, y:1};\n  \n        points[1].curveFrom = {x: 1, y: 1};\n        points[1].curveTo = {x: 0, y: 0.5};\n      }\n    }\n  \n    if(direction == \"Right\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosY<secondLayerPosY){\n        points[0].curveFrom = {x: 0.5, y: 0};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 1};\n      } else {\n        points[0].curveFrom = {x: 0.5, y: 1};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 0};\n      }\n    }\n  \n    if(direction == \"Down\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosX<secondLayerPosX){\n        points[0].curveFrom = {x: 0, y: 0.5};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 1,y: 0.5};\n      } else {\n        points[0].curveFrom = {x: 1, y: 0.5};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0,y: 0.5};\n      }\n    }\n  \n    if(direction == \"Left\"){\n      // Connecting points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY));\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY));\n  \n      // Painting the line\n      line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path));\n      let points = line.layers().firstObject().points();\n  \n      points[0].curveMode = 4;\n      points[1].curveMode = 4;\n      points[0].hasCurveFrom = true;\n      points[1].hasCurveTo = true;\n  \n      if(firstLayerPosY<secondLayerPosY){\n        points[0].curveFrom = {x: 0.5, y: 0};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 1};\n      } else {\n        points[0].curveFrom = {x: 0.5, y: 1};\n        points[0].curveTo = {x: -0.5,y:1};\n  \n        points[1].curveFrom = {x: 1,y: 1};\n        points[1].curveTo = {x: 0.5,y: 0};\n      }\n    }\n  \n    // Providing Settings for the arrow\n    line.setName(\"Curved Arrow\");\n  \n    return line;\n}\n\n// Conditions\n\nfunction addCondition(keyword, x, y){ // Refactored\n    let libraries = sketch.getLibraries();\n    let libraryObject, symbolReferences, symbol;\n  \n    for(let g = 0; g < libraries.length; g++) {\n      symbolReferences = libraries[g].getImportableSymbolReferencesForDocument(document);\n      for(let i = 0; i < symbolReferences.length; i++) {\n        if(symbolReferences[i].name.includes(keyword)){\n          libraryObject = symbolReferences[i];\n        }\n      }\n    }\n  \n    if(libraryObject == null){\n      symbol = null;\n      UI.alert('Condition symbol is not found', 'If you would like to add arrows with specific conditions, you need to specify them in your libraries. You can download the library that works well with the plugin by going into Plugins -> Connection Arrows -> Get Free Library. Conditions are taken from the library based on their names. Make sure to name symbol as \"#condition\" so it will be added here');\n    } else {\n      let symbolMaster = libraryObject.import();\n      symbol = symbolMaster.createNewInstance();\n      symbol = addToConditionGroup(symbol, x, y);\n    }\n  \n    return symbol;\n}\n\nfunction addToConditionGroup(condition, x, y){ // Refactored\n    let conGroup = checkForGroup(\"Conditions\");\n    let arGroup = checkForGroup(\"Arrows\");\n    let arGroupX = arGroup != null ? arGroup.frame().x() : 0;\n    let arGroupY = arGroup != null ? arGroup.frame().y() : 0;\n  \n    if(conGroup){\n      condition.frame.x = x - condition.frame.width / 2 - (conGroup.frame().x() - arGroupX);\n      condition.frame.y = y - condition.frame.height / 2 - (conGroup.frame().y() - arGroupY);\n      condition.parent = conGroup;\n      conGroup.fixGeometryWithOptions(1);\n    } else {\n      condition.frame.x = x - condition.frame.width / 2;\n      condition.frame.y = y - condition.frame.height / 2;\n      let Group = require('sketch/dom').Group;\n      let group = new Group({\n        parent: currentParentGroup,\n        name: 'Conditions',\n        layers: [condition]\n      });\n      group.moveToBack();\n      group.adjustToFit();\n    }\n    return condition.id;\n}\n\nfunction updateCondition(conditionID, x, y){ // Refactored\nlet condition = document.getLayerWithID(conditionID);\n// log (condition)\nlet conGroup = checkForGroup(\"Conditions\") ;\nlet arGroup = checkForGroup(\"Arrows\");\nlet arGroupX = arGroup != null ? arGroup.frame().x() : 0;\nlet arGroupY = arGroup != null ? arGroup.frame().y() : 0;\n\nif(conGroup){\n    condition.frame.x = x - condition.frame.width / 2 - (conGroup.frame().x() - arGroupX);\n    condition.frame.y = y - condition.frame.height / 2 - (conGroup.frame().y() - arGroupY);\n    conGroup.fixGeometryWithOptions(1);\n} else {\n    condition.frame.x = x - condition.frame.width / 2;\n    condition.frame.y = y - condition.frame.height / 2;\n}\nreturn condition.id;\n}\n\n// Style\n\nfunction styleLine(line, style){ // Refactored\n    let localStyle;\n    \n    if(style != null){ \n      // For updates\n      if(getLayerStyles(style) != null && style != \"Default Style\"){\n        // If style is specified\n        localStyle = style;\n        let ownStyle = getLayerStyles(style);\n        line.sharedStyle = ownStyle[0];\n      } else {\n        // if there is no specific style\n        localStyle = \"Default Style\";\n        let border = line.style().addStylePartOfType(1);\n        border.color = MSColor.colorWithRGBADictionary({r: 0.89, g: 0.89, b: 0.89, a: 1});\n        border.thickness = 2;\n        line.style().endMarkerType = 2;\n      }\n    } else {\n      // For creating new\n      if(context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowStyle\", docData, pluginKey) != null && context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowStyle\", docData, pluginKey) != \"Default Style\"){\n        // we have settins almost all the time and it's not default\n        localStyle = getLayerStyles(context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowStyle\", docData, pluginKey));\n        line.sharedStyle = localStyle[0];\n        localStyle = localStyle[0].name();\n      } else {\n        localStyle = \"Default Style\";\n        let border = line.style().addStylePartOfType(1);\n        border.color = MSColor.colorWithRGBADictionary({r: 0.89, g: 0.89, b: 0.89, a: 1});\n        border.thickness = 2;\n        line.style().endMarkerType = 2;\n      } \n    }\n  \n    return localStyle;\n}\n\nfunction getLayerStyles(name) { // Refactored\n    let allStyles = docData.allLayerStyles();\n    let keyword = \"$arrow\";\n    let styles = [];\n  \n    for(let i = 0; i < allStyles.count(); i++){\n      if(name == null) {\n        if(allStyles[i].name().includes(keyword)){styles.push(allStyles[i]);}\n      } else {\n        if(allStyles[i].name() == name){styles.push(allStyles[i]);}\n      }\n    }\n      return styles;\n}\n  \n// Groups\n\nfunction addToArrowsGroup(line){\n    let currentGroup = checkForGroup(\"Arrows\");\n    if(currentGroup){\n      currentGroup.addLayers([line]);\n      currentGroup.fixGeometryWithOptions(1);\n    } else {\n      let Group = require('sketch/dom').Group;\n      let group = new Group({\n        parent: currentParentGroup,\n        name: 'Arrows',\n        locked: true,\n        layers: [line]\n      });\n      group.moveToBack();\n      group.adjustToFit();\n    }\n}\n\nfunction checkForGroup(groupName) { // refactored\n    let currentGroup = null;\n  \n    // Checking all the groups that we have\n    for(let i = 0; i < currentParentGroup.layers().count(); i++){\n      if(currentParentGroup.layers()[i].name() == groupName) {\n        currentGroup = currentParentGroup.layers()[i];\n      } \n    }\n  \n    return currentGroup;\n}","//\n//  Variables\n//\n\nimport sketch from 'sketch';\n\n\nlet UI = require('sketch/ui') ;\nvar Settings = require('sketch/settings');\n\nconst pluginKey = \"flowArrows\";\nlet document;\n\nlet docData, pluginData, currentParentGroup, newConnectionsData;\nif(context.document){\n  //cc:remember place\n  document = sketch.fromNative(context.document);\n  docData = context.document.documentData();\n  pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\n  currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage(); // TODO: Might be a problem for multiple artboards\n  newConnectionsData = getConnectionsData();\n} else {\n  document = sketch.fromNative(context.actionContext.document);\n  //cc:here is bug;well, seems like a bug in logic\n}\n  \n//\n//  Create Connection Function\n//\n\n\nexport function createAutoArrow(context){start(context, \"Auto\", false);}\nexport function createRightArrow(context){start(context, \"Right\", false);}\nexport function createDownArrow(context){start(context, \"Down\", false);}\nexport function createLeftArrow(context){start(context, \"Left\", false);}\nexport function createUpArrow(context){start(context, \"Up\", false);}\n\nexport function createRightArrowWithCondition(context){start(context, \"Right\", true);}\nexport function createDownArrowWithCondition(context){start(context, \"Down\", true);}\nexport function createLeftArrowWithCondition(context){start(context, \"Left\", true);}\nexport function createUpArrowWithCondition(context){start(context, \"Up\", true);}\n\n//\n// Plugin Commands\n//\n\nexport function updateSelectedArrows(context) {\n  let selection = context.selection;\n\n  if(selection.count() > 1 && selection[0].class() != \"MSArtboardGroup\"){\n    // Need to find source object by ID first\n    let currentConnectionsData = newConnectionsData; // Need to refactor\n\n    for(let g = 0; g < selection.count(); g++) {\n      if(selection[g].objectID() != selection[0].objectID()){\n        // Then need to create or update connection arrow with each selection\n        let connectionIndex = findConnectionIndex(selection[0].objectID(), selection[g].objectID(), currentConnectionsData);\n\n        if(connectionIndex.length == 0){\n          updateArrow(currentConnectionsData[connectionIndex].firstObject, currentConnectionsData[connectionIndex].secondObject, currentConnectionsData[connectionIndex].style, currentConnectionsData[connectionIndex].type, currentConnectionsData[connectionIndex].direction, currentConnectionsData[connectionIndex].line, currentConnectionsData[connectionIndex].condition, currentConnectionsData[connectionIndex].isCondition, connectionIndex);\n          sketch.UI.message(\"Current connection is updated 🤘\");\n        } else {\n          sketch.UI.message(\"There is no connection between selected layers on the plugin data\");\n        }\n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n    \n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers. Artboards are coming soon 🥳\");\n  }\n}\n\nexport function autoUpdateSelectedArrows(context) {  \n  const action = context.actionContext;\n\n  docData = action.document.documentData();\n  pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey);\n  currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage(); // TODO: Might be a problem for multiple artboards\n  newConnectionsData = getConnectionsData();\n\n  const movedLayers = Array.from(context.actionContext.layers).map(layer => sketch.fromNative(layer));\n  log(movedLayers[0].id);\n  log(movedLayers.length);\n\n  // if (movedLayers.filter(layer => (layer.type == 'Artboard' || (layer.type == 'SymbolMaster' && config.arrangeSymbols))).length > 0) {\n  //   ArrangeArtboards(context)\n  // }\n\n  let currentConnectionsData = newConnectionsData; // Need to refactor\n\n  for(let g = 0; g < movedLayers.length; g++) {\n\n    let connectionIndex = findConnectionIndex(movedLayers[0].id, null, currentConnectionsData);\n\n    log(\"yes \"+connectionIndex);\n    if(connectionIndex.length == 0){\n      \n      updateArrow(currentConnectionsData[connectionIndex[0]].firstObject, currentConnectionsData[connectionIndex[0]].secondObject, currentConnectionsData[connectionIndex[0]].style, currentConnectionsData[connectionIndex[0]].type, currentConnectionsData[connectionIndex[0]].direction, currentConnectionsData[connectionIndex[0]].line, currentConnectionsData[connectionIndex[0]].condition, currentConnectionsData[connectionIndex[0]].isCondition, connectionIndex[0]);\n      sketch.UI.message(\"Current connection is updated 🤘\");\n    } else {\n      sketch.UI.message(\"There is no connection between selected layers on the plugin data\");\n    }\n    \n  }\n  context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n}\n\n\nexport function updateArtboardArrows(context) {\n  // TODO: Need to show amount of updated arrows and deleted ones\n  let selection = context.selection;\n  let connections = getConnectionsData();\n  let firstObjectArtboard;\n  let secondObjectArtboard;\n  \n  if(connections.length > 0){\n    // We have connections in database\n    const updateArrowsCounter = connections.length;\n    for (let i = 0; i < updateArrowsCounter; i ++) {\n      // Need to check if the element is selected globally or from the artboard\n      firstObjectArtboard = document.getLayerWithID(connections[i].firstObject);\n      firstObjectArtboard = firstObjectArtboard.sketchObject.parentArtboard().objectID();\n\n      secondObjectArtboard = document.getLayerWithID(connections[i].secondObject);\n      secondObjectArtboard = secondObjectArtboard.sketchObject.parentArtboard().objectID();\n\n      if(selection.count() == 1 && selection[0].class() == \"MSArtboardGroup\"){\n        // Need to go through each connection and update arrow position for specific artboard\n        \n        if (firstObjectArtboard == selection[0].objectID()){\n          if (secondObjectArtboard == selection[0].objectID()){\n            updateArrow(connections[i].firstObject, connections[i].secondObject, connections[i].style, connections[i].type, connections[i].direction, connections[i].line, connections[i].condition, i);\n          } else {newConnectionsData.push(connections[i])}\n        } else {\n          // If not just saving it\n          newConnectionsData.push(connections[i]);\n        }\n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n    sketch.UI.message(\"All arrows are updated 🚀\");\n  } else {\n    // We don't have any connections to update\n    sketch.UI.message(\"There is nothing to update\");\n  }\n}\n\nexport function updateAllArrows(context) { // TODO\n  // TODO: Need to show amount of updated arrows and deleted ones\n  let currentConnectionsData = newConnectionsData;\n  if(currentConnectionsData.length > 0){\n    // We have connections in database\n    const updateArrowsCounter = currentConnectionsData.length;\n    for (let i = 0; i < updateArrowsCounter; i ++) {\n      // Need to go through each connection and update arrow position without artboards\n      // Need to check if current object don't have the parrent\n      updateArrow(currentConnectionsData[i].firstObject, currentConnectionsData[i].secondObject, currentConnectionsData[i].style, currentConnectionsData[i].type, currentConnectionsData[i].direction, currentConnectionsData[i].line, currentConnectionsData[i].condition, i);\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n    sketch.UI.message(\"All arrows are updated 🚀\");\n  } else {\n    // We don't have any connections to update\n    sketch.UI.message(\"There is nothing to update\");\n  }\n}\n\nexport function deleteAllArrows(context) {\n\n  if(newConnectionsData.length > 0){\n    // We have connections in database\n    for (let i = 0; i < newConnectionsData.length; i ++) {\n      // Need to go through each connection and update arrow position\n      deleteLine(newConnectionsData[i].line);\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(null, \"arrowConnections\", docData, pluginKey);\n    sketch.UI.message(\"All arrows are deleted\");\n  } else {\n    // We don't have any connections to update\n    sketch.UI.message(\"There is nothing to delete\");\n  }\n}\n\nexport function deleteArtboardArrows(context) {\n  let selection = context.selection;\n  let firstObject, secondObject;\n\n  // Need to delete all the arrows only from selected artboard\n  if(selection.count() == 1 && selection[0].class() == \"MSArtboardGroup\"){\n    let connections = getConnectionsData();\n    \n    if(connections.length > 0){\n      // We have connections in database\n      const updateArrowsCounter = connections.length;\n      for (let i = 0; i < updateArrowsCounter; i ++) {\n        // Need to go through each connection and check if it placed on selected artboard\n        firstObject = document.getLayerWithID(connections[i].firstObject);\n        secondObject = document.getLayerWithID(connections[i].secondObject);\n        if (firstObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n          if (secondObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n            deleteLine(connections[i].line);\n            newConnectionsData = deleteConnectionFromData(i);\n          }\n        }\n      }\n      context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n      sketch.UI.message(\"All arrows from selected artboard are deleted\");\n    } else {\n      // We don't have any connections to update\n      sketch.UI.message(\"There is nothing to delete\");\n    }\n  } else {\n    sketch.UI.message(\"Please select one artboard\");\n  }\n}\n\nexport function deleteSelectedArrows(context) {\n  let selection = context.selection;\n  let firstObject, secondObject;\n\n  if(selection.count() == 2){\n\n    for(let g = 0; g < selection.count(); g++) {\n\n      if(selection[g].objectID() != selection[0].objectID()){ // It will never check 3rd connection\n        \n        let connections = getConnectionsData() ;\n        let connectionIndex = findConnectionIndex(selection[0].objectID(), selection[g].objectID(), connections);\n        \n        if(connectionIndex != null){\n          // We have connections in database\n          deleteLine(connections[connectionIndex].line);\n          newConnectionsData = deleteConnectionFromData(connectionIndex);\n          const updateArrowsCounter = connections.length;\n          for (let i = 0; i < updateArrowsCounter; i ++) {\n            // Need to go through each connection and check if it placed on selected artboard\n            firstObject = document.getLayerWithID(connections[i].firstObject);\n            secondObject = document.getLayerWithID(connections[i].secondObject);\n            if(firstObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n              if(secondObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n                deleteLine(connections[i].line);\n                newConnectionsData = deleteConnectionFromData(i);\n              }\n            }\n          }\n          context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n          sketch.UI.message(\"All arrows from selected layers are deleted ✌️\");\n        }\n      }\n    }\n  } else {\n    sketch.UI.message(\"Select two layers, please 🧐\");\n  }\n}\n\n\n//\n// Functions\n//\n\nimport { drawConnection } from \"./draw.js\";\n\nfunction updateArrow(firstObjectID, secondObjectID, style, type, direction, lineID, conditionID, isCondition, connectionIndex) { // Refactored\n  // Need to check if we have the layers with such IDs\n  let firstObject = document.getLayerWithID(firstObjectID);\n  let secondObject = document.getLayerWithID(secondObjectID);\n  let conditionObject = document.getLayerWithID(conditionID);\n  \n  // Need to delete data first, because we will have a new line\n  deleteLine(lineID);\n  if(conditionID && !isCondition){\n    if(conditionObject){conditionObject.remove();}\n  }\n  \n  newConnectionsData = deleteConnectionFromData(connectionIndex);\n\n  if(firstObject && secondObject){\n    // If we have all the objects, we can recreate the line\n    createArrow(firstObjectID, secondObjectID, style, type, direction, conditionID, isCondition);\n  } \n}\n\nfunction createArrow(firstObjectID, secondObjectID, style, type, direction, conditionID, isCondition) {  // Refactored\n  let localDirection = direction == \"Auto\" ? getDirection(firstObjectID, secondObjectID) : direction;\n\n  // Main Operations based on the settings\n  updateSpacing(firstObjectID, secondObjectID, localDirection);\n  autoAlignLayer(firstObjectID, secondObjectID, localDirection);\n\n  // Making an Arrow \n  let arrow = drawConnection(firstObjectID, secondObjectID, style, type, localDirection, conditionID, isCondition);\n  \n  // Storage for current connection\n  let connection = {\n    firstObject : firstObjectID,\n    secondObject : secondObjectID,\n    style : arrow.style,\n    condition : arrow.conditionID,\n    isCondition : isCondition,\n    type : arrow.type,\n    direction: localDirection,\n    line : arrow.line.objectID()\n  }\n\n  // Need to save this data to the global array\n  newConnectionsData.push(connection);\n}\n\n\nfunction getDirection(firstObjectID, secondObjectID){ // Refactored\n  // Get direction from the source object\n  const firstObject = document.getLayerWithID(firstObjectID);\n  const secondObject = document.getLayerWithID(secondObjectID);\n  const firstObjectMidX = firstObject.frame.x+firstObject.frame.width/2;\n  const firstObjectMidY = firstObject.frame.y+firstObject.frame.height/2;\n  const secondObjectMidX = secondObject.frame.x+secondObject.frame.width/2;\n  const secondObjectMidY = secondObject.frame.y+secondObject.frame.height/2;\n\n  const diffX = firstObjectMidX - secondObjectMidX;\n  const diffY = firstObjectMidY - secondObjectMidY;\n  const absDiffX = Math.abs(diffX);\n  const absDiffY = Math.abs(diffY);\n  let direction;\n\n  if(secondObjectMidX > firstObjectMidX){\n    // Right Half\n    if(secondObjectMidY > firstObjectMidY){\n      // Bottom quarter\n      direction = diffX > diffY ? \"Down\" : \"Right\";\n    } else {\n      // Top quarter\n      direction = absDiffX > absDiffY ? \"Right\" : \"Up\";\n    }\n  } else {\n    // Left Half\n    if(secondObjectMidY > firstObjectMidY){\n      // Bottom quarter\n      direction = absDiffX > absDiffY ? \"Left\" : \"Down\";\n    } else {\n      // Top quarter\n      direction = diffX > diffY ? \"Left\" : \"Up\";\n    }\n  }\n\n  return direction;\n}\n\n\nfunction getConnectionsData(){ //Refactored\n  let dataArray = [];\n  \n  if(pluginData){\n    for (let i = 0; i < pluginData.length; i ++) {\n      dataArray.push(pluginData[i]);\n    }\n  } \n  return dataArray;\n}\n\nfunction findConnectionIndex(firstObjectID, secondObjectID, data){\n  let indexArray = []  ;\n  firstObjectID = String(firstObjectID);\n  secondObjectID = String(secondObjectID);\n  \n  if(pluginData){\n    // If we have database, need to check for connections\n    for(let y = 0; y < data.length; y++){\n      if(firstObjectID == data[y].firstObject || firstObjectID == data[y].secondObject){\n        if(secondObjectID == null){\n          // When we need to find connection between two objects\n          if(secondObjectID == data[y].firstObject || secondObjectID == data[y].secondObject){\n            indexArray[0] = y;\n          } \n        } else {\n          // When we need to find a connection for one object only\n          indexArray.push(y);\n        }\n      }\n    }\n  }\n  return indexArray;\n}\n\nfunction deleteConnectionFromData(connectionIndex){ // Refactored\n  let newConnections = [];\n  if(pluginData){\n    // If we have database\n    let connections = pluginData;\n\n    for (let i = 0; i < connections.length; i ++) {\n      // Updating all connections without deleted one\n      if(i != connectionIndex){\n        newConnections.push(connections[i]);\n      }\n    }\n  }\n  return newConnections;\n}\n\nfunction deleteLine(lineID){ // refactored\n  let lineObject = document.getLayerWithID(lineID);\n  let selectedGroup;\n  if(lineObject){\n    selectedGroup = lineObject.parent;\n    lineObject.remove();\n    if(selectedGroup.layers.length == 0){\n      selectedGroup.remove();\n    }\n  }\n}\n\nfunction updateSpacing(sourceObjectID, childObjectID, direction){\n  let sourceObject = document.getLayerWithID(sourceObjectID);\n  let childObject = document.getLayerWithID(childObjectID);\n\n  if(Settings.settingForKey(\"arrowSpacing\") && Settings.settingForKey(\"arrowSpacing\") != 0){\n    let currentSpacing = Settings.settingForKey(\"arrowSpacing\");\n    \n    if(direction == \"Right\"){\n      childObject.frame.x = sourceObject.frame.x + sourceObject.frame.width + currentSpacing;\n    }\n  \n    if(direction == \"Down\"){\n      childObject.frame.y = sourceObject.frame.y + sourceObject.frame.height + currentSpacing;\n    }\n  \n    if(direction == \"Left\"){\n      childObject.frame.x = sourceObject.frame.x - childObject.frame.width - currentSpacing;\n    }\n  \n    if(direction == \"Up\"){\n      childObject.frame.y = sourceObject.frame.y - childObject.frame.height - currentSpacing;\n    }\n  }\n}\n\nfunction autoAlignLayer(sourceObjectID, childObjectID, direction){\n  let sourceObject = document.getLayerWithID(sourceObjectID);\n  let childObject = document.getLayerWithID(childObjectID);\n  let sourceMidY, childMidY, sourceMidX, childMidX, diff;\n\n  if(Settings.settingForKey(\"autoAlign\")){\n    if(Settings.settingForKey(\"autoAlign\") == true){\n      // If user turned on Auto-Align settings\n      \n      if(direction == \"Right\" || direction == \"Left\"){\n        sourceMidY = sourceObject.frame.y + sourceObject.frame.height/2;\n        childMidY = childObject.frame.y + childObject.frame.height/2;\n        diff = sourceMidY - childMidY;\n        if(diff > -6 && diff < 6){childObject.frame.y = childObject.frame.y + diff;}\n      }\n    \n      if(direction == \"Down\" || direction == \"Up\"){\n        sourceMidX = sourceObject.frame.x + sourceObject.frame.width/2;\n        childMidX = childObject.frame.x + childObject.frame.width/2;\n        diff = sourceMidX - childMidX;\n        if(diff > -6 && diff < 6){childObject.frame.x = childObject.frame.x + diff;}\n      }\n    }\n  }\n}\n\nfunction defineSourceObject(firstObjectID, secondObjectID, direction){ //Refactored\n  let firstObject = document.getLayerWithID(firstObjectID);\n  let secondObject = document.getLayerWithID(secondObjectID);\n  let sourceObjectID;\n\n  if(direction == \"Right\"){\n    if(firstObject.frame.x <= secondObject.frame.x){\n      sourceObjectID = firstObject.id;\n    } else {\n      sourceObjectID = secondObject.id;\n    }\n  }\n\n  if(direction == \"Down\"){\n    if(firstObject.frame.y <= secondObject.frame.y){\n      sourceObjectID = firstObject.id;\n    } else {\n      sourceObjectID = secondObject.id;\n    }\n  }\n\n  if(direction == \"Left\"){\n    if(firstObject.frame.x <= secondObject.frame.x){\n      sourceObjectID = secondObject.id;\n    } else {\n      sourceObjectID = firstObject.id;\n    }\n  }\n\n  if(direction == \"Up\"){\n    if(firstObject.frame.y <= secondObject.frame.y){\n      sourceObjectID = secondObject.id;\n    } else {\n      sourceObjectID = firstObject.id;\n    }\n  }\n\n  return sourceObjectID;\n}\n\nfunction getSourceObjectFromSelection(selection, direction){ //Refactored\n  let sourceObjectID = selection.firstObject().objectID();\n  \n  if(direction != \"Auto\"){\n    for(let g = 0; g < selection.count(); g++) {\n      sourceObjectID = defineSourceObject(sourceObjectID, selection[g].objectID(), direction);\n    }\n  }\n \n  return sourceObjectID;\n}\n\nfunction start(context, direction, isCondition){\n  //cc:start#1;Passing all the data\n  let selection = context.selection;\n\n  if(selection.count() > 1 && selection[0].class() != \"MSArtboardGroup\"){\n    // Need to find source object by ID first\n    let sourceObjectID = getSourceObjectFromSelection(selection, direction);\n    let currentConnectionsData = newConnectionsData; // Need to refactor\n\n    for(let g = 0; g < selection.count(); g++) {\n      if(selection[g].objectID() != sourceObjectID){\n        // Then need to create or update connection arrow with each selection\n        let connectionIndex = findConnectionIndex(sourceObjectID, selection[g].objectID(), currentConnectionsData);\n        \n        if(connectionIndex.length == 0){\n          // There is no connection with this two objects in our database\n          createArrow(sourceObjectID, selection[g].objectID(), null, null, direction, null, isCondition);\n          sketch.UI.message(\"New connection is created 🚀\");\n        } else {\n          // Need to remake the arrow condition\n          updateArrow(sourceObjectID, selection[g].objectID(), null, null, direction, currentConnectionsData[connectionIndex].line, currentConnectionsData[connectionIndex].condition, isCondition, connectionIndex);\n          sketch.UI.message(\"Current connection is updated 🤘\");\n        }\n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey);\n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers. Artboards are coming soon 🥳\");\n  }\n}\n\n\n\n\n// const track = require(\"sketch-module-google-analytics\")\n// track(\"UA-138226597-1\", \"event\", {\n//   ec: \"command\", \n//   ea: \"start\", \n//   ev: \"my-command\"\n// });\n\n\n\n\n\n","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/settings\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}